#!/usr/bin/env ruby.exe
require 'pg'
require 'date'
conn = PGconn.open(:dbname => 'development')

isTVshow = false
e = ''


File.open('db/movies.list', 'r') do |f|
  while (not f.eof?)
  	if isTVshow
  		a = e
  	else
  		a = f.readline
  	end
  	#puts "Reading from start "+a
	if /\d{4,}\-\d{4,5}$/ =~ a || /\d{4,}\-\?{4,5}$/ =~ a #if matches tv show
	  	tString = /^".{1,}"/.match(a)[0]
	  	title = (tString[1,tString.length-2].gsub("'","\'"))
	  	valid_title = title.unpack('C*').pack('U*')

	    query,y1,y2 = ''
	    y1 = Date::strptime(/\d{4,}\-\S{4,5}$/.match(a)[0].split("-").first, "%Y").to_s
	    puts "TV SHOW: "+valid_title+" y1:"+y1

	    if /\d{4,}\-\d{4,5}$/ =~ a
	    	y2 = Date::strptime(/\d{4,}\-\d{4,5}$/.match(a)[0].split("-").last, "%Y").to_s
	    	#puts "inserting date"
		    conn.exec('INSERT INTO tv_shows (id,title,year_released,year_ended) VALUES (DEFAULT,$1,$2,$3)',[valid_title,y1,y2])
	    else
	    	#puts "inserting no date"
		    conn.exec('INSERT INTO tv_shows (id,title,year_released) VALUES (DEFAULT,$1,$2)',[valid_title,y1])
	    end

    	while (not f.eof) #now loop through episodes
	    	e = f.readline
	    	if /{.{1,}}/ =~ e
				puts "EPISODE: "+e
				isTVshow = false
	    	else
	    		puts "breaking out of "+e
	    		isTVshow = true
	    		break
	    	end
		  	tvString = /^".{1,}"/.match(e)[0]
		  	valid_tv_title = (tvString[1,tvString.length-2].gsub("'","\'\'")).unpack('C*').pack('U*')

	    	if /{.{1,}(#.{1,})}/ =~ e
		    	epSeason = /\d{1,}\.\d{1,}/.match(e)[0].split(".").first
		    	epNumber = /\d{1,}\.\d{1,}/.match(e)[0].split(".").last
		    	epTitleString = /{.{1,}(#)/.match(e)[0]
		    	if epTitleString.length > 4
		    		valid_ep_title = (epTitleString[1,epTitleString.length-4].gsub("'","\'")).unpack('C*').pack('U*')
		    	else 
		    		valid_ep_title = ''
		    	end
	   		else
	   			epSeason = '0'
	   			epNumber = '0'
	   			epTitleString = /{.{1,}}/.match(e)[0]
	   			if epTitleString.length > 4
		    		valid_ep_title = (epTitleString[1,epTitleString.length-2].gsub("'","\'")).unpack('C*').pack('U*')
		    	else 
		    		valid_ep_title = ''
		    	end
	   		end

	    	tvYearMatch = /\((\d{1,})\)/.match(e)[0]
	    	tvYear = Date::strptime(tvYearMatch[1,tvYearMatch.length-2], "%Y").to_s

	    	puts "valid_tv_title: "+valid_tv_title
	    	puts "valid_ep_title: "+valid_ep_title
	    	puts "epSeason: "+epSeason
	    	puts "epNumber: "+epNumber
	    	puts "tvYear: "+tvYear

	    	query = 'SELECT id FROM tv_shows where title = \''+valid_tv_title+'\' and year_released = \''+tvYear+'\';'
	    	puts "QUERY: "+query
	    	tvshows = conn.exec(query)
	    	puts tvshows.num_tuples
	    	puts tvshows
	    	tvshowID = conn.exec('SELECT id FROM tv_shows where title = $1 and year_released = $2',[valid_tv_title,tvYear]).getvalue(0,0)
		    puts tvshowID



		    tvseason = conn.exec('SELECT id from tv_seasons where tv_show_id = $1 and number = $2',[tvshowID,epSeason])

			if tvseason == nil or tvseason == 0 or tvseason.num_tuples.zero? #season does not exist so create season
			    conn.exec('INSERT INTO tv_seasons (id,tv_show_id,number) VALUES  
		    			(DEFAULT,$1,$2);',[tvshowID,epSeason])
			end
			tvseasonID = conn.exec('SELECT id from tv_seasons where tv_show_id = $1 and number = $2',[tvshowID,epSeason]).getvalue(0,0) 

	    	if (/\d{4,5}$/) =~ e #ep has year
		    	epYear = Date::strptime(/\d{4,5}$/.match(e)[0], "%Y").to_s
		    	puts "epYear: "+epYear
		    	conn.exec('INSERT INTO tv_episodes (id,number,title,tv_season_id,air_date) VALUES 
	    			(DEFAULT,$1,$2,$3,$4)',[epNumber,valid_ep_title,tvseasonID,epYear])
		    else #ep has no year
		    	conn.exec('INSERT INTO tv_episodes (id,number,title,tv_season_id) VALUES 
	    			(DEFAULT,$1,$2,$3)',[epNumber,valid_ep_title,tvseasonID])
		    end
	    end
	  end
  end 
end 

#res.each do |row|
 # row.each do |column|
 #  puts column
 # end
#end

conn.close()
puts "end of file!"